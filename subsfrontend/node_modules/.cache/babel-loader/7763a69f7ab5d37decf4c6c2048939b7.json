{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport unitData from \"./units\";\nimport Autocompleteself from \"./Autocomplete.js\";\nimport Results from \"./Results.js\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport FormErrors from \"./FormErrors.js\";\nimport { withStyles, withTheme } from \"@material-ui/core\";\nconst StyledText = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'gray'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#D9D9D9'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white'\n      },\n      '&:hover fieldset': {\n        borderColor: 'white'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#D9D9D9'\n      }\n    },\n    backgroundColor: 'white',\n    padding: '0 5px'\n  }\n})(TextField);\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredient: \"\",\n      amount: \"\",\n      unit: \"\",\n      showResult: false,\n      errors: {\n        ingredient: \"\",\n        amount: \"\",\n        unit: \"\"\n      },\n      ingredientValid: null,\n      amountValid: null,\n      unitValid: null,\n      submissionValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.ingredient !== prevState.ingredient) {\n      this.setState({\n        showResult: false\n      });\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target ? event.target : event;\n    this.setState({\n      [name]: value\n    }, () => {\n      this.validateFields(name, value);\n    });\n  }\n\n  validateFields(name, value) {\n    let fieldErrors = this.state.errors;\n    const formFields = Object.keys(this.state.errors);\n\n    if (formFields.includes(name)) {\n      fieldErrors[name] = value.length > 0 ? '' : 'Please choose a valid ' + name;\n      this.setState({\n        errors: fieldErrors,\n        [`${name}Valid`]: value.length > 0 ? true : false\n      }, this.validateForm);\n    }\n  }\n\n  validateForm() {\n    this.setState({\n      submissionValid: this.state.ingredientValid && this.state.amountValid && this.state.unitValid\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      showResult: true\n    });\n  }\n\n  render() {\n    const unitList = unitData.map(unit => /*#__PURE__*/React.createElement(\"option\", {\n      key: unit.index,\n      value: unit.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, unit.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Search for your ingredient\"), /*#__PURE__*/React.createElement(Autocompleteself, {\n      sendData: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Enter the quantity:\"), /*#__PURE__*/React.createElement(StyledText, {\n      error: this.state.errors.amount,\n      name: \"amount\",\n      helperText: this.state.errors.amount,\n      value: this.state.amount,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"unit\",\n      className: \"Select\",\n      value: this.state.unit,\n      onChange: this.handleChange,\n      helperText: this.state.errors.unit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, unitList), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      disabled: !this.state.submissionValid,\n      type: \"Submit\",\n      variant: \"outlined\",\n      onClick: this.handleClick,\n      className: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Find substitution!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 3\n      }\n    }, this.state.showResult && /*#__PURE__*/React.createElement(Results, {\n      ingredient: this.state.ingredient,\n      amount: this.state.amount,\n      unit: this.state.unit,\n      showResult: this.state.showResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/App.js"],"names":["React","Component","unitData","Autocompleteself","Results","Select","Button","TextField","FormErrors","withStyles","withTheme","StyledText","root","color","borderBottomColor","borderColor","backgroundColor","padding","App","constructor","state","ingredient","amount","unit","showResult","errors","ingredientValid","amountValid","unitValid","submissionValid","handleChange","bind","handleSubmit","componentDidUpdate","prevProps","prevState","setState","event","name","value","target","validateFields","fieldErrors","formFields","Object","keys","includes","length","validateForm","preventDefault","render","unitList","map","index","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport unitData from \"./units\";\nimport Autocompleteself from \"./Autocomplete.js\";\nimport Results from \"./Results.js\"\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport FormErrors from \"./FormErrors.js\";\nimport { withStyles, withTheme } from \"@material-ui/core\";\n\nconst StyledText = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'gray',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#D9D9D9',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#D9D9D9',\n      },\n    },\n    backgroundColor: 'white',\n    padding: '0 5px',\n  },\n})(TextField);\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredient: \"\",\n      amount: \"\",\n      unit: \"\",\n      showResult: false,\n      errors: {ingredient: \"\", amount:\"\", unit: \"\"},\n      ingredientValid: null,\n      amountValid: null,\n      unitValid: null,\n      submissionValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.ingredient !== prevState.ingredient){\n      this.setState({\n        showResult: false\n      })\n    }\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target ? event.target : event;\n    this.setState(\n      {[name]: value},\n      () => {this.validateFields(name, value)})\n    }\n    \n  validateFields(name, value) {\n    let fieldErrors = this.state.errors\n    const formFields = Object.keys(this.state.errors)\n    if (formFields.includes(name)) {\n      fieldErrors[name]= value.length > 0 ? '': 'Please choose a valid ' + name\n      this.setState({\n        errors: fieldErrors,\n        [`${name}Valid`]: (value.length > 0 ? true: false)\n      }, this.validateForm)\n  } \n  }\n\n  validateForm(){\n    this.setState({\n      submissionValid: this.state.ingredientValid && this.state.amountValid && this.state.unitValid\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.setState({\n      showResult: true\n    })\n  }\n\n  render() {\n    const unitList = unitData.map(unit => (\n      <option key={unit.index} value={unit.name}>\n        {unit.name}\n      </option>\n    ));\n    return (\n      <div className=\"App\">\n\n        <form onSubmit={this.handleSubmit}>\n          {/* ingredient search */}\n          <p>Search for your ingredient</p>\n          <Autocompleteself \n            sendData={this.handleChange}\n          />\n          \n          {/* quantity textbox */}\n          <p>Enter the quantity:</p>\n          <StyledText\n            error = {this.state.errors.amount}\n            name=\"amount\"\n            helperText={this.state.errors.amount}\n            value={this.state.amount}\n            onChange={this.handleChange}\n          />\n\n          {/* units drop-down */}\n          <Select\n            name=\"unit\"\n            className=\"Select\"\n            value={this.state.unit}\n            onChange={this.handleChange}\n            helperText = {this.state.errors.unit}\n          >\n            {unitList}\n            \n          </Select>\n\n          {/*submit button */}\n          <br />\n          <Button disabled = {!this.state.submissionValid} type=\"Submit\" variant=\"outlined\" onClick={this.handleClick} className=\"Submit\">\n            Find substitution!\n          </Button>\n        </form>\n\t\t\n\t\t<div className=\"Results\">\n\t\t{this.state.showResult && <Results \n\t\t\tingredient={this.state.ingredient} \n\t\t\tamount={this.state.amount} \n\t\t\tunit={this.state.unit}\n\t\t\tshowResult={this.state.showResult}\n\t\t/>}\t\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}