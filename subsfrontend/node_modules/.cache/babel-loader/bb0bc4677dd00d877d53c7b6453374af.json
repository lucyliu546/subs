{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./styles.css\";import\"./subs.json\";import axios from\"axios\";import TextField from'@material-ui/core/TextField';import Autocomplete from'@material-ui/lab/Autocomplete';import{withStyles}from\"@material-ui/core\";var StyledText=withStyles({root:{'& label.Mui-focused':{color:'gray'},'& .MuiInput-underline:after':{borderBottomColor:'#D9D9D9'},'& .MuiOutlinedInput-root':{'& fieldset':{borderColor:'white'},'&:hover fieldset':{borderColor:'white'},'&.Mui-focused fieldset':{borderColor:'#D9D9D9'}},boxShadow:'0 3px 3px 2px rgba(240, 105, 135, .3)'}})(TextField);var Autocompleteself=/*#__PURE__*/function(_Component){_inherits(Autocompleteself,_Component);var _super=_createSuper(Autocompleteself);function Autocompleteself(props){var _this;_classCallCheck(this,Autocompleteself);_this=_super.call(this,props);_this.state={input:\"\",ingredient:\"\",suggestions:[],rawOptions:[],options:[]};return _this;}_createClass(Autocompleteself,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"http://127.0.0.1:8000/api/subs/\").then(function(response){var result=response.data;_this2.setState({rawOptions:result});},function(error){{alert(error);};});case 2:case\"end\":return _context.stop();}}},_callee);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"suggestionSelected\",value:function suggestionSelected(value){if(value!==null){this.props.sendData({name:\"showResult\",value:false});this.setState({ingredient:value.subname});this.props.sendData({name:\"ingredient\",value:value.subname});};}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Autocomplete,{name:\"ingredient\",onChange:function onChange(event,value){return _this3.suggestionSelected(value);},id:\"autocomplete-box\",options:this.state.rawOptions,getOptionLabel:function getOptionLabel(option){return option.subname;},disableClearable:true,style:{width:700,background:'white',justifyContent:'center',margin:'0 auto','&$cssFocused $notchedOutline':{borderColor:'#448cff'},'&:hover $notchedOutline':{borderColor:'#FFFFFF'}},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(StyledText,Object.assign({},params,{label:\"Ingredient\",variant:\"outlined\"}));}}));}}]);return Autocompleteself;}(Component);export default Autocompleteself;","map":{"version":3,"sources":["/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/Autocomplete.js"],"names":["React","Component","axios","TextField","Autocomplete","withStyles","StyledText","root","color","borderBottomColor","borderColor","boxShadow","Autocompleteself","props","state","input","ingredient","suggestions","rawOptions","options","get","then","response","result","data","setState","error","alert","value","sendData","name","subname","event","suggestionSelected","option","width","background","justifyContent","margin","params"],"mappings":"2iCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,cAAP,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAGD,UAAU,CAAC,CAC5BE,IAAI,CAAE,CACJ,sBAAuB,CACrBC,KAAK,CAAE,MADc,CADnB,CAIJ,8BAA+B,CAC7BC,iBAAiB,CAAE,SADU,CAJ3B,CAOJ,2BAA4B,CAC1B,aAAc,CACZC,WAAW,CAAE,OADD,CADY,CAI1B,mBAAoB,CAClBA,WAAW,CAAE,OADK,CAJM,CAO1B,yBAA0B,CACxBA,WAAW,CAAE,SADW,CAPA,CAPxB,CAkBJC,SAAS,CAAE,uCAlBP,CADsB,CAAD,CAAV,CAqBhBR,SArBgB,CAAnB,C,GAuBMS,CAAAA,gB,oHACJ,0BAAYC,KAAZ,CAAmB,kDACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAE,EADI,CAEXC,UAAU,CAAE,EAFD,CAGXC,WAAW,CAAE,EAHF,CAIXC,UAAU,CAAE,EAJD,CAKXC,OAAO,CAAE,EALE,CAAb,CAFiB,aASlB,C,iUAGOjB,CAAAA,KAAK,CAACkB,GAAN,CAAU,iCAAV,EAA6CC,IAA7C,CACJ,SAAAC,QAAQ,CAAI,CACV,GAAIC,CAAAA,MAAM,CAAGD,QAAQ,CAACE,IAAtB,CACA,MAAI,CAACC,QAAL,CAAc,CAAEP,UAAU,CAAEK,MAAd,CAAd,EACC,CAJC,CAKN,SAACG,KAAD,CAAW,CACX,CAACC,KAAK,CAACD,KAAD,CAAL,CAAa,EACb,CAPK,C,kOAWUE,K,CAAO,CACzB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClB,KAAKf,KAAL,CAAWgB,QAAX,CAAoB,CAACC,IAAI,CAAE,YAAP,CAAqBF,KAAK,CAAE,KAA5B,CAApB,EACA,KAAKH,QAAL,CAAc,CACZT,UAAU,CAAEY,KAAK,CAACG,OADN,CAAd,EAIA,KAAKlB,KAAL,CAAWgB,QAAX,CAAoB,CAAEC,IAAI,CAAE,YAAR,CAAsBF,KAAK,CAAEA,KAAK,CAACG,OAAnC,CAApB,EACC,EACF,C,uCAGM,iBACP,mBACE,4CACC,oBAAC,YAAD,EACC,IAAI,CAAG,YADR,CAIC,QAAQ,CAAI,kBAACC,KAAD,CAAQJ,KAAR,QAAkB,CAAA,MAAI,CAACK,kBAAL,CAAwBL,KAAxB,CAAlB,EAJb,CAKC,EAAE,CAAC,kBALJ,CAMC,OAAO,CAAE,KAAKd,KAAL,CAAWI,UANrB,CAOC,cAAc,CAAE,wBAACgB,MAAD,QAAYA,CAAAA,MAAM,CAACH,OAAnB,EAPjB,CAQC,gBAAgB,KARjB,CASC,KAAK,CAAE,CAAEI,KAAK,CAAE,GAAT,CACGC,UAAU,CAAE,OADf,CAEGC,cAAc,CAAE,QAFnB,CAGGC,MAAM,CAAE,QAHX,CAIG,+BAAgC,CAC9B5B,WAAW,CAAE,SADiB,CAJnC,CAOC,0BAA0B,CACtBA,WAAW,CAAC,SADU,CAP3B,CATR,CAoBC,WAAW,CAAE,qBAAC6B,MAAD,qBAAY,oBAAC,UAAD,kBAAgBA,MAAhB,EAAwB,KAAK,CAAC,YAA9B,CAA2C,OAAO,CAAC,UAAnD,GAAZ,EApBd,EADD,CADF,CA2BD,C,8BAhE8BtC,S,EAmE/B,cAAeW,CAAAA,gBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\nimport \"./subs.json\";\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst StyledText = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'gray',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#D9D9D9',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#D9D9D9',\r\n      },\r\n    },\r\n    boxShadow: '0 3px 3px 2px rgba(240, 105, 135, .3)'\r\n  },\r\n})(TextField);\r\n\r\nclass Autocompleteself extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      ingredient: \"\",\r\n      suggestions: [],\r\n      rawOptions: [],\r\n      options: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axios.get(\"http://127.0.0.1:8000/api/subs/\").then( \r\n      response => { \r\n        var result = response.data; \r\n        this.setState({ rawOptions: result })\r\n        }, \r\n    (error) => { \r\n    {alert(error)}; \r\n    } \r\n    ); \r\n    }\r\n\r\nsuggestionSelected (value) {\r\n  if (value !== null) {\r\n    this.props.sendData({name: \"showResult\", value: false})\r\n    this.setState({\r\n      ingredient: value.subname,\r\n\r\n    });\r\n    this.props.sendData({ name: \"ingredient\", value: value.subname });\r\n    };\r\n  }\r\n\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n     <Autocomplete\r\n      name = 'ingredient'\r\n      \r\n      \r\n      onChange = {(event, value) => this.suggestionSelected(value)} \r\n      id=\"autocomplete-box\"\r\n      options={this.state.rawOptions}\r\n      getOptionLabel={(option) => option.subname}\r\n      disableClearable \r\n      style={{ width: 700,\r\n                background: 'white',\r\n                justifyContent: 'center',\r\n                margin: '0 auto',\r\n                '&$cssFocused $notchedOutline': {\r\n                  borderColor: '#448cff',\r\n              },\r\n              '&:hover $notchedOutline':{\r\n                  borderColor:'#FFFFFF'\r\n              }\r\n               }}\r\n      renderInput={(params) => <StyledText {...params} label=\"Ingredient\" variant=\"outlined\"/>}\r\n    />\r\n    </div>\r\n  )\r\n  \r\n}\r\n}\r\n\r\nexport default Autocompleteself\r\n"]},"metadata":{},"sourceType":"module"}