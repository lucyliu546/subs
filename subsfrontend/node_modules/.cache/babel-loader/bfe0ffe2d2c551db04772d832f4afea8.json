{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/Pantry.js\";\nimport React, { Component } from 'react';\nimport NavigationBar from \"./NavigationBar.js\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Button from \"@material-ui/core/Button\";\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport KitchenIcon from '@material-ui/icons/Kitchen';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./subs.json\";\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withStyles } from \"@material-ui/core\";\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nconst StyledText = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'gray'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#D9D9D9'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white'\n      },\n      '&:hover fieldset': {\n        borderColor: 'white'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#D9D9D9'\n      }\n    },\n    boxShadow: '0 3px 3px 2px rgba(240, 105, 135, .3)'\n  }\n})(TextField);\nconst StyledBtn = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'gray'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#D9D9D9'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'white'\n      },\n      '&:hover fieldset': {\n        borderColor: 'white'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#D9D9D9'\n      }\n    },\n    alignContent: 'left',\n    marginLeft: '.2%',\n    display: 'inline-grid',\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    transform: 'translateY(4px)'\n  }\n})(Button);\n\nclass Pantry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteIngr = async ingr => {\n      await this.setState(prevstate => ({\n        userIngredients: prevstate.userIngredients.filter(item => item != ingr),\n        rawOptions: prevstate.rawOptions.concat(ingr)\n      }));\n      this.setLocalStorage();\n    };\n\n    this.state = {\n      input: \"\",\n      ingredients: [],\n      userIngredients: JSON.parse(localStorage.getItem('userPantry')),\n      suggestions: [],\n      rawOptions: [],\n      showBtn: false,\n      clear: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.filterOptions = this.filterOptions.bind(this);\n    this.setLocalStorage = this.setLocalStorage.bind(this);\n  }\n\n  async componentDidMount() {\n    await axios.get(\"http://127.0.0.1:8000/api/subs/\").then(response => {\n      var result = response.data;\n      this.setState({\n        rawOptions: result.map(i => {\n          return i.subname;\n        })\n      });\n    }, error => {\n      {\n        alert(error);\n      }\n      ;\n    });\n    await axios.get(\"http://127.0.0.1:8000/api/inventories/\").then(response => {\n      var result = response.data;\n      this.setState({\n        TESTpantry: result\n      });\n    }, error => {\n      {\n        alert(error);\n      }\n      ;\n    });\n    this.filterOptions();\n  }\n  /* Once a user clicks add  */\n\n\n  async handleClick() {\n    await this.setState(prevstate => ({\n      userIngredients: prevstate.userIngredients.concat(prevstate.ingredients),\n      ingredients: [],\n      clear: !prevstate.clear\n    }));\n    this.filterOptions();\n    this.setLocalStorage();\n  }\n  /* Refreshes dropdown based on what user adds/deletes  */\n\n\n  filterOptions() {\n    const options = [];\n    const rawOptions = this.state.rawOptions;\n    const userIngredients = this.state.userIngredients;\n\n    for (var val of rawOptions) {\n      const found = userIngredients.includes(val);\n\n      if (found === false) {\n        options.push(val);\n      }\n    }\n\n    this.setState({\n      rawOptions: options\n    });\n  }\n  /* stores user's pantry in localstorage */\n\n\n  setLocalStorage() {\n    localStorage.setItem('userPantry', JSON.stringify(this.state.userIngredients));\n  }\n  /* Adds what user selects in dropdown to a temp array */\n\n\n  suggestionSelected(valuearray) {\n    if (valuearray !== null) {\n      this.setState({\n        ingredients: valuearray.map(i => {\n          return i;\n        }),\n        showBtn: true\n      });\n    }\n\n    ;\n  }\n  /* If a user clicks the delete icon */\n\n\n  render() {\n    const hasIngr = this.state.userIngredients.length > 0;\n    const useringr = this.state.userIngredients;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PantrySearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      multiple: true,\n      name: \"ingredient\",\n      key: this.state.clear,\n      onChange: (event, valuearray) => this.suggestionSelected(valuearray),\n      id: \"autocomplete-box\",\n      options: this.state.rawOptions,\n      getOptionLabel: option => option,\n      disableClearable: true,\n      style: {\n        width: 700,\n        display: 'inline-block',\n        position: 'relative',\n        background: 'white',\n        alignContent: 'left',\n        marginTop: '2%',\n        '&$cssFocused $notchedOutline': {\n          borderColor: '#448cff'\n        },\n        '&:hover $notchedOutline': {\n          borderColor: '#FFFFFF'\n        }\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(StyledText, Object.assign({}, params, {\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(StyledBtn, {\n      disabled: this.showBtn,\n      type: \"Submit\",\n      onClick: this.handleClick,\n      className: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 2\n      }\n    }, \"Add\")), hasIngr && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: '775px',\n        width: '775px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '10px',\n        backgroundColor: '#FF8FB6',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 4\n      }\n    }, useringr.map(i => /*#__PURE__*/React.createElement(ListItem, {\n      style: {\n        backgroundColor: 'rgb(255,255,255,.2)',\n        margin: '5px 5px 5px 5px',\n        maxWidth: '765px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(KitchenIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 6\n      }\n    }))), /*#__PURE__*/React.createElement(ListItemText, {\n      disableTypography: true,\n      primary: i,\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.deleteIngr(i),\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 6\n      }\n    }))))))), !hasIngr && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: '775px',\n        minHeight: '100px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '10px',\n        backgroundColor: '#525252',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: 'white',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 3\n      }\n    }, \"Your pantry is empty \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 69\n      }\n    }), \" Use the search box to add some things! \")));\n  }\n\n}\n\nexport default Pantry;","map":{"version":3,"sources":["/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/Pantry.js"],"names":["React","Component","NavigationBar","List","ListItem","ListItemAvatar","Button","ListItemSecondaryAction","ListItemText","Avatar","IconButton","KitchenIcon","DeleteIcon","axios","TextField","Autocomplete","withStyles","createFilterOptions","StyledText","root","color","borderBottomColor","borderColor","boxShadow","StyledBtn","alignContent","marginLeft","display","paddingTop","paddingBottom","transform","Pantry","constructor","props","deleteIngr","ingr","setState","prevstate","userIngredients","filter","item","rawOptions","concat","setLocalStorage","state","input","ingredients","JSON","parse","localStorage","getItem","suggestions","showBtn","clear","handleClick","bind","filterOptions","componentDidMount","get","then","response","result","data","map","i","subname","error","alert","TESTpantry","options","val","found","includes","push","setItem","stringify","suggestionSelected","valuearray","render","hasIngr","length","useringr","event","option","width","position","background","marginTop","params","minWidth","marginRight","backgroundColor","margin","maxWidth","fontSize","minHeight","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NavigationBar from \"./NavigationBar.js\"\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport KitchenIcon from '@material-ui/icons/Kitchen';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./subs.json\";\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nconst StyledText = withStyles({\r\n  root: {\r\n\t'& label.Mui-focused': {\r\n\t  color: 'gray',\r\n\t},\r\n\t'& .MuiInput-underline:after': {\r\n\t  borderBottomColor: '#D9D9D9',\r\n\t},\r\n\t'& .MuiOutlinedInput-root': {\r\n\t  '& fieldset': {\r\n\t\tborderColor: 'white',\r\n\t  },\r\n\t  '&:hover fieldset': {\r\n\t\tborderColor: 'white',\r\n\t  },\r\n\t  '&.Mui-focused fieldset': {\r\n\t\tborderColor: '#D9D9D9',\r\n\t  },\r\n\t},\r\n\tboxShadow: '0 3px 3px 2px rgba(240, 105, 135, .3)'\r\n  },\r\n})(TextField);\r\n\r\nconst StyledBtn = withStyles({\r\n  root: {\r\n\t  '& label.Mui-focused': {\r\n\t\tcolor: 'gray',\r\n\t  },\r\n\t  '& .MuiInput-underline:after': {\r\n\t\tborderBottomColor: '#D9D9D9',\r\n\t  },\r\n\t  '& .MuiOutlinedInput-root': {\r\n\t\t'& fieldset': {\r\n\t\t  borderColor: 'white',\r\n\t\t},\r\n\t\t'&:hover fieldset': {\r\n\t\t  borderColor: 'white',\r\n\t\t},\r\n\t\t'&.Mui-focused fieldset': {\r\n\t\t  borderColor: '#D9D9D9',\r\n\t\t},\r\n\t  }, \r\n\t  alignContent: 'left',\r\n\t  marginLeft: '.2%',\r\n\t  display: 'inline-grid',\r\n\t  paddingTop: '15px',\r\n\t  paddingBottom: '15px',\r\n\t  transform: 'translateY(4px)'\r\n  },\r\n  \r\n})(Button);\r\n\r\n\r\n\r\nclass Pantry extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t  input: \"\",\r\n\t  ingredients: [],\r\n\t  userIngredients: JSON.parse(localStorage.getItem('userPantry')),\r\n\t  suggestions: [],\r\n\t  rawOptions: [],\r\n\t  showBtn: false,\r\n\t  clear: false,\r\n\t  \r\n\t  \r\n\t};\r\n\tthis.handleClick = this.handleClick.bind(this)\r\n\tthis.filterOptions = this.filterOptions.bind(this)\r\n\tthis.setLocalStorage = this.setLocalStorage.bind(this)\r\n  }\r\n  async componentDidMount() {\r\n\tawait axios.get(\"http://127.0.0.1:8000/api/subs/\").then( \r\n\t  response => { \r\n\t\tvar result = response.data; \r\n\t\tthis.setState({ rawOptions: result.map(i => {\r\n\t\t\treturn i.subname\r\n\t\t}) })\r\n\t\t}, \r\n\t(error) => { \r\n\t{alert(error)}; \r\n\t\t} \r\n  \t); \r\n\tawait axios.get(\"http://127.0.0.1:8000/api/inventories/\").then( \r\n\t  response => { \r\n\t\tvar result = response.data; \r\n\t\tthis.setState({ \r\n\t\t\tTESTpantry: result\r\n\t\t })\r\n\t\t}, \r\n\t(error) => { \r\n\t{alert(error)}; \r\n\t\t} \r\n\t  ); \r\n\tthis.filterOptions()\r\n  }\r\n\r\n/* Once a user clicks add  */\r\n  async handleClick() {\r\n\tawait this.setState(prevstate => ({\r\n\t\tuserIngredients: prevstate.userIngredients.concat(prevstate.ingredients),\r\n\t\tingredients: [],\r\n\t\tclear: !prevstate.clear\r\n\t  }\r\n\t  ))\r\n\t  this.filterOptions()\r\n\t  this.setLocalStorage()\r\n  }\r\n\r\n/* Refreshes dropdown based on what user adds/deletes  */\r\n  filterOptions(){\r\n\tconst options = []\r\n\tconst rawOptions = this.state.rawOptions\r\n\tconst userIngredients = this.state.userIngredients\r\n\tfor (var val of rawOptions) {\r\n\t\tconst found = userIngredients.includes(val)\r\n\t\tif (found === false) {\r\n\t\t\toptions.push(val)\r\n\t\t} \r\n\t }\r\n\tthis.setState({\r\n\t\trawOptions: options\r\n\t})\r\n  }\r\n\r\n/* stores user's pantry in localstorage */\r\n  setLocalStorage() {\r\n\tlocalStorage.setItem('userPantry', JSON.stringify(this.state.userIngredients))\r\n  }\r\n\r\n/* Adds what user selects in dropdown to a temp array */\r\nsuggestionSelected (valuearray) {\r\n  if (valuearray !== null) {\r\n\tthis.setState({\r\n\t  ingredients: valuearray.map(i => {\r\n\t\treturn i\r\n\t  }),\r\n\t  showBtn: true\r\n\r\n\t});\r\n  };\r\n  }\r\n\r\n/* If a user clicks the delete icon */\r\ndeleteIngr = async (ingr) => {\r\n  await this.setState( prevstate => ({\r\n\tuserIngredients: prevstate.userIngredients.filter(item => item != ingr),\r\n\trawOptions: prevstate.rawOptions.concat(ingr)\r\n  }))\r\n  this.setLocalStorage()\r\n}\r\n\r\n\r\n  render() {\r\n\tconst hasIngr = this.state.userIngredients.length > 0\r\n\tconst useringr = this.state.userIngredients\r\n\t \r\n\treturn (\r\n\t  <div className=\"App\">\r\n\t  <NavigationBar/>\r\n\r\n\t  {/*Ingredient input box */}\r\n\t  <div className=\"PantrySearch\">\r\n\t <Autocomplete\r\n\t  multiple\r\n\t  name = 'ingredient'\r\n\t  key = {this.state.clear}\r\n\t  onChange = {(event, valuearray) => this.suggestionSelected(valuearray)} \r\n\t  id=\"autocomplete-box\"\r\n\t  options = {this.state.rawOptions}\r\n\t  getOptionLabel={(option) => option}\r\n\t  \r\n\t  disableClearable \r\n\t  style={{ width: 700,\r\n\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t\tbackground: 'white',\r\n\t\t\t\talignContent: 'left',\r\n\t\t\t\tmarginTop: '2%',\r\n\t\t\t\t'&$cssFocused $notchedOutline': {\r\n\t\t\t\t  borderColor: '#448cff',\r\n\t\t\t  },\r\n\t\t\t  '&:hover $notchedOutline':{\r\n\t\t\t\t  borderColor:'#FFFFFF'\r\n\t\t\t  }\r\n\t\t\t   }}\r\n\t  renderInput={(params) => <StyledText {...params} label=\"Ingredient\" variant=\"outlined\" />}\r\n\t/>\r\n\r\n\t{/*Submit button*/}\r\n\t<StyledBtn disabled = {this.showBtn} type=\"Submit\" onClick={this.handleClick} className=\"Submit\"\r\n\t\t\t\t>\r\n\t\t\tAdd\r\n\t</StyledBtn>\r\n\t\r\n\t</div>\r\n\t{/*Pantry list*/}\r\n\t\r\n\t{hasIngr && (\r\n\t  <div style={{minWidth: '775px', width: '775px', marginLeft: 'auto', marginRight: 'auto', marginTop: '10px', \r\n\t\t\t\t  backgroundColor: '#FF8FB6', color: 'white'}}>\r\n\t  <List dense>\r\n\t\t{useringr.map(i => (\r\n\t\t\t\t<ListItem style={{backgroundColor: 'rgb(255,255,255,.2)', margin: '5px 5px 5px 5px', maxWidth: '765px'}}>\r\n\t\t\t\t<ListItemAvatar> \r\n\t\t\t\t  <Avatar>\r\n\t\t\t\t\t<KitchenIcon />\r\n\t\t\t\t  </Avatar>\r\n\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t<ListItemText disableTypography\r\n\t\t\t\t  primary= {i}\r\n\t\t\t\t  style = {{fontSize: '15px'}}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t  <IconButton onClick={() => this.deleteIngr(i)} edge=\"end\" aria-label=\"delete\">\r\n\t\t\t\t\t<DeleteIcon style={{marginRight: '5px'}}/>\r\n\t\t\t\t  </IconButton>\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t  </ListItem>\r\n\t\t\t  ))}\r\n\t  </List>\r\n\t  </div>\r\n\t)\r\n\t}\r\n\t{!hasIngr && \r\n\t<div style={{maxWidth: '775px', minHeight: '100px', marginLeft: 'auto', marginRight: 'auto', marginTop: '10px', \r\n\tbackgroundColor: '#525252', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n\t\t<h1 style={{color:'white', fontSize:'25px'}}>Your pantry is empty <br /> Use the search box to add some things! </h1>\r\n\t\t\r\n\t  </div>\r\n\r\n\t}\r\n\t  \r\n\t  </div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Pantry;"]},"metadata":{},"sourceType":"module"}