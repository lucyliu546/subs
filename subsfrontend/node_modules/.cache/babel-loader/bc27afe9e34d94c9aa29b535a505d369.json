{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport unitData from \"./units\";\nimport Autocomplete from \"./Autocomplete.js\";\nimport Results from \"./Results.js\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport { Formik } from 'formik';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredient: \"\",\n      amount: \"\",\n      unit: \"\",\n      showResult: false,\n      errors: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.ingredient !== prevState.ingredient) {\n      this.setState({\n        showResult: false\n      });\n    }\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target ? event.target : event;\n\n    if (name === \"amount\") {\n      if (!Number(value) && value !== \"\") {\n        alert(\"Your quantity must be a number\");\n      }\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const errors = this.validate(this.state.ingredient, this.state.amount, this.state.unit);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors: errors\n      });\n      console.log(errors);\n      return;\n    }\n\n    this.setState({\n      showResult: true\n    });\n  }\n\n  validate(ingredient, amount, unit) {\n    const errors = [];\n\n    if (ingredient === '') {\n      errors.push(['ingredient', 'Please enter an ingredient']);\n    }\n\n    if (amount === '') {\n      errors.push(['amount', 'Please enter an amount']);\n    }\n\n    if (unit === '') {\n      errors.push(['unit', 'Please select a unit']);\n    }\n\n    return errors;\n  }\n\n  render() {\n    const unitList = unitData.map(unit => /*#__PURE__*/React.createElement(\"option\", {\n      key: unit.index,\n      value: unit.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, unit.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Search for your ingredient\"), /*#__PURE__*/React.createElement(Autocomplete, {\n      sendData: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Enter the quantity:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      value: this.state.amount,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      name: \"unit\",\n      className: \"Select\",\n      value: this.state.unit,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, unitList), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"Submit\",\n      variant: \"outlined\",\n      onClick: this.handleClick,\n      className: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Find substitution!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 3\n      }\n    }, this.state.showResult && /*#__PURE__*/React.createElement(Results, {\n      ingredient: this.state.ingredient,\n      amount: this.state.amount,\n      unit: this.state.unit,\n      showResult: this.state.showResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/App.js"],"names":["React","Component","unitData","Autocomplete","Results","Select","Button","Formik","App","constructor","state","ingredient","amount","unit","showResult","errors","handleChange","bind","handleSubmit","componentDidUpdate","prevProps","prevState","setState","event","name","value","target","Number","alert","preventDefault","validate","length","console","log","push","render","unitList","map","index","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport unitData from \"./units\";\nimport Autocomplete from \"./Autocomplete.js\";\nimport Results from \"./Results.js\"\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport { Formik } from 'formik';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredient: \"\",\n      amount: \"\",\n      unit: \"\",\n      showResult: false,\n      errors:[]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.ingredient !== prevState.ingredient){\n      this.setState({\n        showResult: false\n      })\n    }\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target ? event.target : event;\n    if (name === \"amount\") {\n      if (!Number(value) && value !== \"\") {\n        alert(\"Your quantity must be a number\");\n      }\n    }\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const errors = this.validate(this.state.ingredient, this.state.amount, this.state.unit)\n    if (errors.length > 0) {\n      this.setState({errors: errors})\n      console.log(errors)\n      return\n    }\n    this.setState({\n      showResult: true\n    })\n  }\n\n  validate(ingredient, amount, unit){\n    const errors = []\n    if (ingredient === ''){\n        errors.push(['ingredient', 'Please enter an ingredient'])\n      } if (amount === '') {\n        errors.push(['amount', 'Please enter an amount'])\n      } if (unit === '') {\n        errors.push(['unit', 'Please select a unit'])\n      }\n    return errors\n  }\n\n  render() {\n    const unitList = unitData.map(unit => (\n      <option key={unit.index} value={unit.name}>\n        {unit.name}\n      </option>\n    ));\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSubmit}>\n          {/* ingredient search */}\n          <p>Search for your ingredient</p>\n          <Autocomplete \n            sendData={this.handleChange}\n          />\n          \n          {/* quantity textbox */}\n          <p>Enter the quantity:</p>\n          <input\n            type=\"text\"\n            name=\"amount\"\n            value={this.state.amount}\n            onChange={this.handleChange}\n          />\n\n          {/* units drop-down */}\n          <Select\n            name=\"unit\"\n            className=\"Select\"\n            value={this.state.unit}\n            onChange={this.handleChange}\n          >\n            {unitList}\n          </Select>\n\n          {/*submit button */}\n          <br />\n          <Button type=\"Submit\" variant=\"outlined\" onClick={this.handleClick} className=\"Submit\">\n            Find substitution!\n          </Button>\n        </form>\n\t\t\n\t\t<div className=\"Results\">\n\t\t{this.state.showResult && <Results \n\t\t\tingredient={this.state.ingredient} \n\t\t\tamount={this.state.amount} \n\t\t\tunit={this.state.unit}\n\t\t\tshowResult={this.state.showResult}\n\t\t/>}\t\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}