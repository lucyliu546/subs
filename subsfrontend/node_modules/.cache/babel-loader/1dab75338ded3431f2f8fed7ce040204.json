{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/Results.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n/* eslint-disable */\n\n/* Displays the substitution results at the bottom of the main page */\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      subslist: [],\n      userIngredients: JSON.parse(localStorage.getItem('userPantry'))\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(encodeURI(\"http://127.0.0.1:8000/api/subs/?format=json&subname=\".concat(this.props.ingredient.toString()))).then(response => {\n      var result = response.data;\n      this.setState({\n        result: result\n      });\n    }, error => {\n      {\n        alert(error);\n      }\n      ;\n    });\n  }\n\n  async componentDidUpdate() {\n    if (this.state.result[0].subname !== this.props.ingredient) {\n      await axios.get(encodeURI(\"http://127.0.0.1:8000/api/subs/?format=json&subname=\".concat(this.props.ingredient.toString()))).then(response => {\n        var result = response.data;\n        this.setState({\n          result: result\n        });\n      }, error => {\n        {\n          alert(error);\n        }\n        ;\n      });\n    }\n  }\n\n  render() {\n    if (this.state.result.length > 0) {\n      var substlist = [this.state.result[0].subslist];\n      const ingredientList = substlist.map(t => t[0]);\n      console.log(ingredientList);\n      var userHasIngrs = this.userIngredients.every(i => ingredientList.includes(i));\n    }\n\n    return this.state.result.length > 0 && userHasIngrs ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, Object.entries(substlist).map((t, k) => /*#__PURE__*/React.createElement(ListItem, {\n      className: \"ListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: t[0],\n      secondary: (t[1] * this.props.amount).toFixed(2) + \" \" + this.props.unit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }))))) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }, \"You do not have any of the ingredients\");\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/mnt/c/Users/Lucy/Documents/projects/bakingsubsv2/subsfrontend/src/Results.js"],"names":["React","Component","axios","List","ListItem","ListItemText","Results","constructor","props","state","result","subslist","userIngredients","JSON","parse","localStorage","getItem","componentDidMount","get","encodeURI","concat","ingredient","toString","then","response","data","setState","error","alert","componentDidUpdate","subname","render","length","substlist","ingredientList","map","t","console","log","userHasIngrs","every","i","includes","Object","entries","k","amount","toFixed","unit"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n/* eslint-disable */\r\n\r\n\r\n/* Displays the substitution results at the bottom of the main page */\r\n\r\n\r\nclass Results extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tresult: [],\r\n\t\t\tsubslist: [],\r\n\t\t\tuserIngredients: JSON.parse(localStorage.getItem('userPantry'))\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tawait axios.get(encodeURI(\"http://127.0.0.1:8000/api/subs/?format=json&subname=\"\r\n\t\t.concat((this.props.ingredient).toString())\r\n\t\t\t)).then( \r\n        response => { \r\n\t\t\tvar result = response.data; \r\n\t\t\tthis.setState({ result: result })\r\n            }, \r\n            (error) => { \r\n            {alert(error)}; \r\n            } \r\n\t\t)\r\n\t\t} \r\n\t\r\n\tasync componentDidUpdate() {\r\n\t\tif (this.state.result[0].subname !== this.props.ingredient ){\r\n\t\tawait axios.get(encodeURI(\"http://127.0.0.1:8000/api/subs/?format=json&subname=\"\r\n\t\t.concat((this.props.ingredient).toString())\r\n\t\t\t)).then( \r\n        response => { \r\n\t\t\tvar result = response.data; \r\n\t\t\tthis.setState({ result: result })\r\n            }, \r\n            (error) => { \r\n            {alert(error)}; \r\n            } \r\n\t\t)\r\n\t\t} \r\n\t}\t\t\r\n\r\n\trender() {\r\n\t\tif (this.state.result.length > 0) {\r\n\t\t\tvar substlist = [this.state.result[0].subslist]\r\n\t\t\tconst ingredientList = substlist.map(t => t[0])\r\n\t\t\tconsole.log(ingredientList)\r\n\t\t\tvar userHasIngrs = this.userIngredients.every(i => ingredientList.includes(i))\r\n\t\t}\r\n\t\t\t\r\n\t\treturn(\r\n\t\t\t(this.state.result.length > 0 && userHasIngrs) ? (\r\n\t\t\t<div className=\"List\">\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{Object.entries(substlist).map((t, k) => (\r\n\t\t\t\t\t<ListItem className=\"ListItem\">\r\n\t\t\t\t\t\t<ListItemText \r\n\t\t\t\t\t\t\tprimary={t[0]} \r\n\t\t\t\t\t\t\tsecondary={(t[1] * this.props.amount).toFixed(2) + \" \" + this.props.unit }/>\r\n\t\t\t\t\t</ListItem>))}\r\n\t\t\t\t</List>\t \r\n            </div>) : (<h1>You do not have any of the ingredients</h1>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results"]},"metadata":{},"sourceType":"module"}